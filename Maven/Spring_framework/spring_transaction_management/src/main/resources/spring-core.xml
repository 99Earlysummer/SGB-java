<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.sgb"></context:component-scan>
 <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
     <property name="dataSource" ref="dataSource"></property>
 </bean>

    <context:property-placeholder location="jdbc.properties"></context:property-placeholder>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${driverClass}"></property>
        <property name="url" value="${url}"></property>
        <property name="username" value="${user}"></property>
        <property name="password" value="${password}"></property>
    </bean>
    <!--1.1,将DataSourceTransactionManager对象放入到Spring容器 2将切入点与 通知加入到spring容器中-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--1.2,将DefaultTransactionDefinition对象放入到Spring容器，设定了两种不同的事务策略-->
    <!--TransactionDefinition : 只读性=false,隔离级别=REPEATABLE_READ-->
<!--配置了两测咯-->

<!--    <bean id="definition1" class="org.springframework.transaction.support.DefaultTransactionDefinition">
        <property name="readOnly" value="false"></property>
    </bean>
    &lt;!&ndash;TransactionDefinition : 只读性=true,隔离级别=REPEATABLE_READ&ndash;&gt;
    <bean id="definition2" class="org.springframework.transaction.support.DefaultTransactionDefinition">
        <property name="readOnly" value="true"></property>
    </bean>-->
    
<!--    <aop:config>
&lt;!&ndash;        <aop:aspect  ref="txAdvice">
            &lt;!&ndash;配置前置通知   通知方法名                 切入点       修饰符 返回值类型    方法全类名&ndash;&gt;
            <aop:around method="dmlAround" pointcut-ref="p1"></aop:around>
            <aop:pointcut id="p1" expression="execution(* *..*Service.*())"></aop:pointcut>
        </aop:aspect>&ndash;&gt;
<aop:aspect>
        <aop:around method="dmlAround" pointcut="execution(* *..*Service.deleteUser(..))"></aop:around>
        <aop:around method="dmlAround" pointcut="execution(* *..*Service.addUser(..))"></aop:around>
        <aop:around method="dqlAround" pointcut="execution(* *..*Service.selectUser(..))"></aop:around>
</aop:aspect>
    </aop:config>-->


    <!--开启事务注解支持-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="transfer" read-only="false" isolation="REPEATABLE_READ" timeout="10" propagation="REQUIRED" />
            <tx:method name="select*" read-only="true" isolation="REPEATABLE_READ" timeout="10" propagation="REQUIRED"/>
            <tx:method name="add*" read-only="false" isolation="REPEATABLE_READ" timeout="10" propagation="REQUIRED"/>
            <tx:method name="delete*" read-only="false" isolation="REPEATABLE_READ" timeout="10" propagation="REQUIRED"/>
            <tx:method name="update*" read-only="false" isolation="REPEATABLE_READ" timeout="10" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config><!--将通知织入到切入点-->
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* *..*Service.*(..))"></aop:advisor>
    </aop:config>

</beans>